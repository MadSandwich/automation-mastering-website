---
import BaseHead from '@components/base/BaseHead.astro'

interface Props {
	title: string
	description: string
}

const { title, description } = Astro.props
---

<!doctype html>
<html lang="en">
	<BaseHead {title} {description} />
	<body class="antialiased bg-gray-50 dark:bg-gray-900">
		<slot />
		<script>
			import 'flowbite'

			const themeToggle = () => {
				if (
					localStorage.getItem('color-theme') === 'dark' ||
					(!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
				) {
					document.getElementById('theme-toggle-light-icon').classList.remove('hidden')
				} else {
					document.getElementById('theme-toggle-dark-icon').classList.remove('hidden')
				}

				document.getElementById('theme-toggle').addEventListener('click', function () {
					// toggle icons inside button
					document.getElementById('theme-toggle-dark-icon').classList.toggle('hidden')
					document.getElementById('theme-toggle-light-icon').classList.toggle('hidden')

					// if set via local storage previously
					if (localStorage.getItem('color-theme')) {
						if (localStorage.getItem('color-theme') === 'light') {
							document.documentElement.classList.add('dark')
							localStorage.setItem('color-theme', 'dark')
						} else {
							document.documentElement.classList.remove('dark')
							localStorage.setItem('color-theme', 'light')
						}

						// if NOT set via local storage previously
					} else {
						if (document.documentElement.classList.contains('dark')) {
							document.documentElement.classList.remove('dark')
							localStorage.setItem('color-theme', 'light')
						} else {
							document.documentElement.classList.add('dark')
							localStorage.setItem('color-theme', 'dark')
						}
					}
				})
			}

			themeToggle()
			document.addEventListener('astro:after-swap', themeToggle)
		</script>
	</body>
</html>
